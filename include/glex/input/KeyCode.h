#pragma once

#if defined(GLFW)
#include "glex/common/gl.h"
enum KeyCode {
    // Letters and Symbols
    A = GLFW_KEY_A,
    B = GLFW_KEY_B,
    C = GLFW_KEY_C,
    D = GLFW_KEY_D,
    E = GLFW_KEY_E,
    F = GLFW_KEY_F,
    G = GLFW_KEY_G,
    H = GLFW_KEY_H,
    I = GLFW_KEY_I,
    J = GLFW_KEY_J,
    K = GLFW_KEY_K,
    L = GLFW_KEY_L,
    M = GLFW_KEY_M,
    N = GLFW_KEY_N,
    O = GLFW_KEY_O,
    P = GLFW_KEY_P,
    Q = GLFW_KEY_Q,
    R = GLFW_KEY_R,
    S = GLFW_KEY_S,
    T = GLFW_KEY_T,
    U = GLFW_KEY_U,
    V = GLFW_KEY_V,
    W = GLFW_KEY_W,
    X = GLFW_KEY_X,
    Y = GLFW_KEY_Y,
    Z = GLFW_KEY_Z,

    // Number Row
    Row0 = GLFW_KEY_0,
    Row1 = GLFW_KEY_1,
    Row2 = GLFW_KEY_2,
    Row3 = GLFW_KEY_3,
    Row4 = GLFW_KEY_4,
    Row5 = GLFW_KEY_5,
    Row6 = GLFW_KEY_6,
    Row7 = GLFW_KEY_7,
    Row8 = GLFW_KEY_8,
    Row9 = GLFW_KEY_9,
    RowSubtract = GLFW_KEY_MINUS,
    RowEqual = GLFW_KEY_EQUAL,

    // Number Pad
    Pad0 = GLFW_KEY_KP_0,
    Pad1 = GLFW_KEY_KP_1,
    Pad2 = GLFW_KEY_KP_2,
    Pad3 = GLFW_KEY_KP_3,
    Pad4 = GLFW_KEY_KP_4,
    Pad5 = GLFW_KEY_KP_5,
    Pad6 = GLFW_KEY_KP_6,
    Pad7 = GLFW_KEY_KP_7,
    Pad8 = GLFW_KEY_KP_8,
    Pad9 = GLFW_KEY_KP_9,
    PadNumLock = GLFW_KEY_NUM_LOCK,
    PadDivide = GLFW_KEY_KP_DIVIDE,
    PadMultiply = GLFW_KEY_KP_MULTIPLY,
    PadSubtract = GLFW_KEY_KP_SUBTRACT,
    PadAdd = GLFW_KEY_KP_ADD,
    PadDecimal = GLFW_KEY_KP_DECIMAL,
    PadEnter = GLFW_KEY_KP_ENTER,

    // Special Keys
    Escape = GLFW_KEY_ESCAPE,
    F1 = GLFW_KEY_F1,
    F2 = GLFW_KEY_F2,
    F3 = GLFW_KEY_F3,
    F4 = GLFW_KEY_F4,
    F5 = GLFW_KEY_F5,
    F6 = GLFW_KEY_F6,
    F7 = GLFW_KEY_F7,
    F8 = GLFW_KEY_F8,
    F9 = GLFW_KEY_F9,
    F10 = GLFW_KEY_F10,
    F11 = GLFW_KEY_F11,
    F12 = GLFW_KEY_F12,
    PrintScreen = GLFW_KEY_PRINT_SCREEN,
    ScrollLock = GLFW_KEY_SCROLL_LOCK,
    Pause = GLFW_KEY_PAUSE,
    Tilde = GLFW_KEY_GRAVE_ACCENT,
    Backspace = GLFW_KEY_BACKSPACE,
    Tab = GLFW_KEY_TAB,
    LeftBracket = GLFW_KEY_LEFT_BRACKET,
    RightBracket = GLFW_KEY_RIGHT_BRACKET,
    Backslash = GLFW_KEY_BACKSLASH,
    CapsLock = GLFW_KEY_CAPS_LOCK,
    SemiColon = GLFW_KEY_SEMICOLON,
    SingleQuote = GLFW_KEY_APOSTROPHE,
    Enter = GLFW_KEY_ENTER,
    LeftShift = GLFW_KEY_LEFT_SHIFT,
    Comma = GLFW_KEY_COMMA,
    Period = GLFW_KEY_PERIOD,
    ForwardSlash = GLFW_KEY_SLASH,
    RightShift = GLFW_KEY_RIGHT_SHIFT,
    LeftControl = GLFW_KEY_LEFT_CONTROL,
    LeftSuper = GLFW_KEY_LEFT_SUPER,
    LeftAlt = GLFW_KEY_LEFT_ALT,
    Space = GLFW_KEY_SPACE,
    RightAlt = GLFW_KEY_RIGHT_ALT,
    RightSuper = GLFW_KEY_RIGHT_SUPER,
    RightControl = GLFW_KEY_RIGHT_CONTROL,
    Up = GLFW_KEY_UP,
    Down = GLFW_KEY_DOWN,
    Left = GLFW_KEY_LEFT,
    Right = GLFW_KEY_RIGHT,
    Insert = GLFW_KEY_INSERT,
    Home = GLFW_KEY_HOME,
    PageUp = GLFW_KEY_PAGE_UP,
    Delete = GLFW_KEY_DELETE,
    End = GLFW_KEY_END,
    PageDown = GLFW_KEY_PAGE_DOWN
};

#elif defined(DREAMCAST)
#include <dc/maple/keyboard.h>

// TODO: Finish adding all keys
enum KeyCode {
    // Letters and Symbols
    A = KBD_KEY_A,
    B = KBD_KEY_B,
    C = KBD_KEY_C,
    D = KBD_KEY_D,
    E = KBD_KEY_E,
    F = KBD_KEY_F,
    G = KBD_KEY_G,
    H = KBD_KEY_H,
    I = KBD_KEY_I,
    J = KBD_KEY_J,
    K = KBD_KEY_K,
    L = KBD_KEY_L,
    M = KBD_KEY_M,
    N = KBD_KEY_N,
    O = KBD_KEY_O,
    P = KBD_KEY_P,
    Q = KBD_KEY_Q,
    R = KBD_KEY_R,
    S = KBD_KEY_S,
    T = KBD_KEY_T,
    U = KBD_KEY_U,
    V = KBD_KEY_V,
    W = KBD_KEY_W,
    X = KBD_KEY_X,
    Y = KBD_KEY_Y,
    Z = KBD_KEY_Z,

    // Number Row
    Row0 = KBD_KEY_0,
    Row1 = KBD_KEY_1,
    Row2 = KBD_KEY_2,
    Row3 = KBD_KEY_3,
    Row4 = KBD_KEY_4,
    Row5 = KBD_KEY_5,
    Row6 = KBD_KEY_6,
    Row7 = KBD_KEY_7,
    Row8 = KBD_KEY_8,
    Row9 = KBD_KEY_9,

    // Number Pad
    Pad0 = KBD_KEY_PAD_0,
    Pad1 = KBD_KEY_PAD_1,
    Pad2 = KBD_KEY_PAD_2,
    Pad3 = KBD_KEY_PAD_3,
    Pad4 = KBD_KEY_PAD_4,
    Pad5 = KBD_KEY_PAD_5,
    Pad6 = KBD_KEY_PAD_6,
    Pad7 = KBD_KEY_PAD_7,
    Pad8 = KBD_KEY_PAD_8,
    Pad9 = KBD_KEY_PAD_9,
    PadNumLock = KBD_KEY_PAD_NUMLOCK,
    PadDivide = KBD_KEY_PAD_DIVIDE,
    PadMultiply = KBD_KEY_PAD_MULTIPLY,
    PadSubtract = KBD_KEY_PAD_MINUS,
    PadAdd = KBD_KEY_PAD_PLUS,
    PadDecimal = KBD_KEY_PAD_PERIOD,
    PadEnter = KBD_KEY_PAD_ENTER,

    // Special Keys
    F1 = KBD_KEY_F1,
    F2 = KBD_KEY_F2,
    F3 = KBD_KEY_F3,
    F4 = KBD_KEY_F4,
    F5 = KBD_KEY_F5,
    F6 = KBD_KEY_F6,
    F7 = KBD_KEY_F7,
    F8 = KBD_KEY_F8,
    F9 = KBD_KEY_F9,
    F10 = KBD_KEY_F10,
    F11 = KBD_KEY_F11,
    F12 = KBD_KEY_F12,
    
    Enter = KBD_KEY_ENTER,
    Escape = KBD_KEY_ESCAPE,
    Backspace = KBD_KEY_BACKSPACE,
    Tab = KBD_KEY_TAB,
    Space = KBD_KEY_SPACE,
    Up = KBD_KEY_UP,
    Down = KBD_KEY_DOWN,
    Left = KBD_KEY_LEFT,
    Right = KBD_KEY_RIGHT
};

#endif